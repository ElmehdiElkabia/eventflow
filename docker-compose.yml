
services:
  # Laravel Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/storage
      - /var/www/html/bootstrap/cache
    ports:
      - "9000:9000" # Expose PHP-FPM port for Nginx
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - app-network
    user: "33:33" 

  # React Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent host node_modules from overwriting container's
    ports:
      - "5173:5173"
    networks:
      - app-network

  # Nginx Web Server Service
  nginx:
    image: nginx:alpine
    container_name: nginx-server
    volumes:
      - ./backend:/var/www/html # Mount Laravel app to Nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - app-network

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql # Persist MySQL data
    ports:
      - "3307:3306"
    networks:
      - app-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge